/*
to convert the px to rem we simply measure the spaces in our designs
in px and then convert them to rem using space/base font size which is usually 16px
*/
html {
    font-size: 100%;
    box-sizing: border-box;
}
*,*::before, *::after {
    box-sizing: inherit;
}

h1, h2, h3 {
    margin-top: 0;
}

body {
    margin: 0;
    padding: 0;
    font-family: 'Public Sans', sans-serif;
    color: $grayishBlue;
    font-size: $font-med;
    line-height: 1.3;

    @include breakpoint-up(large){
        font-size: $font-med;
    }
}

a, a:visited, a:hover {
    color: $grayishBlue;
    text-decoration: none;
}

//spacing
.container {
    max-width: 69.375;
    margin: 0 auto;

    &--pall {
        padding-top: 2.25rem;
        padding-bottom: 2.25rem;
        padding-left: 1.5rem;
        padding-right:1.5rem;
    }

    &--py {
        padding-top: 2.25rem;
        padding-bottom: 2.25rem;
    }

    &--px {
        padding-left: 1.5rem;
        padding-right:1.5rem;
    }

    &--pt { padding-top: 2.5rem; }
    &--pr { padding-right: 1.5rem; }
    &--pb { padding-bottom: 2.25rem; }
    &--pl { padding-left: 1.5rem; }
   
}

//flexbox utilities
.flex {
    display: flex;

    &-jc-sb {
        justify-content: space-between;
    }

    &-jc-c {
        justify-content: center;
    }

    &-ac-c {
        align-content: center;
    }

    &-ai-c {
        align-items: center;
    }
}

//Buttons
// Buttons
button,
.button {
  position: relative;
  display: inline-block;
  padding: 0.875rem 2.1875rem;
  background: linear-gradient(to right, $limeGreen, $brightCyan);
  border: 0;
  border-radius: 50px;
  cursor: pointer;
  color: $white;
  font-weight: 400;
  font-size: $font-sm;
  transition: opacity 300ms ease-in-out;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(255, 255, 255, 0.25);
    opacity: 0;
    transition: opacity 150ms ease-in-out;
  }

  &:hover::before {
    opacity: 1;
  }
}

//Visibility
.hide-for-mobile {
    //hide for tablet and mobile
    @include breakpoint-down(medium) {
        display: none;
    }
}
.hide-for-desktop {
    //hide for desktop viewport widths
    @include breakpoint-up(large) {
        display: none;
    }
    
}